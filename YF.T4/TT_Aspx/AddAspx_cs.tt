<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

<#@ include file="$(ProjectDir)MultipleOutputHelper.ttinclude" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)Config.ttinclude"  #>

<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE100" #>
<#
  IServiceProvider serviceProvider = (IServiceProvider)this.Host;
  EnvDTE.DTE dte = (EnvDTE.DTE) serviceProvider.GetService(typeof(EnvDTE.DTE));
#>


<#
   List<DbTable> tablelist=DbHelper.GetDbTables(config.ConnectionString,config.DbDatabase,config.Tables);
#>
<#	
	// OutPutConfig output=new OutPutConfig(Host,"ConsoleApplication1","Models");
	//output.OutProjectName="ConsoleApplication1";
	//output.OutFolder="Models";
		 //output.OutPutPath=Host.ResolveAssemblyReference("$(ProjectDir)")+"Models";
		 //output.OutPutProject=dte.Solution.FindProjectItem(Host.ResolveAssemblyReference("$(SolutionDir)")+"YF.T4\\Properties\\AssemblyInfo.cs").ContainingProject.ProjectItems;
	var manager = Manager.Create(Host, GenerationEnvironment);  
	manager.OutProjectName="YF.T4";
	manager.OutFolder="Out\\Aspx"; 
   foreach(DbTable table in tablelist)
   {
	   //输出文件名称
	   manager.StartNewFile(table.TableName+"Add.aspx.cs");
 #>
 
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by 余庆元
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using <#= config.ServicesNamespace #>;
using <#= config.DtoNamespace #>;
using YF.Base.Data;

namespace <#= config.AspxNamespace #>
{	
    <# List<DbColumn> columnlist= DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, table.TableName); #>
		
	public partial class <#=table.TableName#>Add:System.Web.UI.Page
    {

	   I<#=table.TableName#> _service = new <#=table.TableName#>Service();	   
        <#=table.TableName#>Dto dto = new <#=table.TableName#>Dto();

		 public string ID
        {
            set
            {
                ViewState["Id"] = value;
            }
            get
            {
                return ViewState["Id"].ToString();
            }
        }
     
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
               // bindDDL();
                ID = Request.QueryString["Id"] == null ? "" : Request.QueryString["Id"].ToString();
                if (ID != "")  //初始化编辑界面
                {
                    dto = _service.GetById(Lid.ToInt());

					<# foreach(DbColumn column in columnlist){#>						
					 txt<#=column.ColumnName#>.Value=dto.<#=column.ColumnName#>;
					<#}#>
                }
            }
        }

         protected void lbtnAdd_Click(object sender, EventArgs e)
        {
            if (ID != "")   //增加
            {
                dto = _service.GetById(Lid.ToInt());
            }

           <# foreach(DbColumn column in columnlist){#>						
					dto.<#=column.ColumnName#>= txt<#=column.ColumnName#>.Value;
		  <#}#>

            if (ID == "")   //增加
            {
                //dto.CreatedTime = DateTime.Now;

                _service.Add(dto);
                Response.Redirect("<#=table.TableName#>Manage.aspx");
            }
            else     //编辑
            {
                dto.Id = ID.ToInt();
                _service.Update(dto);
                Response.Redirect("<#=table.TableName#>Manage.aspx");
            }

        }
    }
}
 
 
<#
   manager.EndBlock();    
   }
   //this.Host.ResolvePath
   manager.Process(true);
    
   #>



  
  


