<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

<#@ include file="$(ProjectDir)MultipleOutputHelper.ttinclude" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)Config.ttinclude"  #>

<#
   List<DbTable> tablelist=DbHelper.GetDbTables(config.ConnectionString,config.DbDatabase,config.Tables);
#>
<#
	var manager = Manager.Create(Host, GenerationEnvironment);  

	manager.OutProjectName="YF.T4";
	manager.OutFolder="Out\\Repositories\\Base";

   foreach(DbTable table in tablelist)
   {
	   manager.StartNewFile(table.TableName+"Repositories.cs");
 #>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by 余庆元
//     对此文件为固定的仓储基类继承，修改可能导致重新生成时被覆盖。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Dapper;
using YF.Base;
using YF.Base.Data;
using YF.Utility.Extensions;
using <#= config.ModelNamespace #>;

namespace <#= config.RepositoryNamespace #>
{	
    <# List<DbColumn> columnlist= DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, table.TableName); #>
	
	public partial class <#=table.TableName#>Repository:RepositoryBase<<#= table.TableName#>,<#= columnlist.Where(a=>a.IsPrimaryKey==true).FirstOrDefault().CSharpType #>>
    {
		public <#=table.TableName#>Repository(IConnectionFactory connectionFactory)
                : base(connectionFactory)
        {               
        }
		
    }

}

<#
   manager.EndBlock();    
   }
   manager.Process(true);
    
   #>
  


